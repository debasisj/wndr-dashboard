generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id              String             @id @default(cuid())
  key             String             @unique
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  coverageHistory TestAutoCoverage[]
  runs            TestRun[]
}

model TestRun {
  id             String     @id @default(cuid())
  projectId      String
  suite          String
  env            String?
  branch         String?
  commit         String?
  ciBuildId      String?
  startedAt      DateTime
  finishedAt     DateTime?
  durationMs     Int
  coveragePct    Float?
  passCount      Int        @default(0)
  failCount      Int        @default(0)
  skipCount      Int        @default(0)
  totalCount     Int        @default(0)
  reportFilename String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  cases          TestCase[]
  project        Project    @relation(fields: [projectId], references: [id])
}

model TestCase {
  id           String   @id @default(cuid())
  runId        String
  name         String
  status       String
  durationMs   Int
  errorMessage String?
  browser      String?
  tagsJson     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  run          TestRun  @relation(fields: [runId], references: [id], onDelete: Cascade)
}

model TestAutoCoverage {
  id                String   @id @default(cuid())
  projectId         String
  autoTestCovered   Int
  manualTestCovered Int
  total             Int
  createdAt         DateTime @default(now())
  project           Project  @relation(fields: [projectId], references: [id])
}
