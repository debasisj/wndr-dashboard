version: "3.9"

# Docker Compose for deploying pre-built images
# Usage: docker-compose -f docker-compose.deploy.yml up -d

services:
  api:
    image: ${REGISTRY:-}wndr-dashboard-api:${VERSION:-latest}
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=file:./dev.db
      - REPORTS_STORAGE=${REPORTS_STORAGE:-local}
      - REPORTS_DIR=/app/storage/reports
      # S3 Configuration (optional)
      - AWS_REGION=${AWS_REGION:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-}
      # CORS and Admin
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - ADMIN_ENABLED=${ADMIN_ENABLED:-true}
      - ADMIN_TOKEN=${ADMIN_TOKEN:-}
    volumes:
      - api_data:/app/prisma
      - api_reports:/app/storage/reports
    ports:
      - "${API_PORT:-4000}:4000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    image: ${REGISTRY:-}wndr-dashboard-web:${VERSION:-latest}
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:4000}
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  api_data:
    driver: local
  api_reports:
    driver: local